# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool
*.out
coverage.*
*.coverprofile
profile.cov
coverage-synctest.*
coverage-merged.*

# Binary output directories
**/bin/
bin/*
dist/

# Dependency directories  
vendor/

# Go workspace files
go.work
go.work.sum
go.work.local
.tool-versions

# Modern Go development tools (2025)
.goreleaser/
dist/
*.snap

# Environment files
.env
.env.local
.env.*.local
config.local.*
*.local.yaml
*.local.yml

# Database development files
*.db-journal
*.db-wal
*.db-shm
migrations/*.backup
data/
pgdata/
postgres-data/

# Security and secrets (2025 security practices)
*.pem
*.key
*.crt
*.p12
*.jks
*secret*
*token*
*cert*
!**/*_test.key
!**/*_test.crt
!**/testdata/**/*.pem

# IDE specific files
.idea/
.vscode/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Debug files
*.log
debug
*.pprof

# Go 1.24 advanced testing artifacts
*.fuzz
fuzz/
**/testdata/large_files/
*.benchmem
*.benchtime

# Profiling and performance analysis (2025 Go toolchain)
*.prof
*.trace
*.memprofile
*.cpuprofile
*.blockprofile
*.mutexprofile
cpu.out
mem.out
block.out
mutex.out
trace.out

# Air hot reload tool artifacts
.air.toml.local
build-errors.log
air_tmp/

# Security and vulnerability reports
*.sarif
*.sbom
govulncheck.*
vuln-report.json
gosec-report.sarif
nancy-report.json

# Temporary files
tmp/
temp/

# Build artifacts
build/

# Local development
docker-compose.override.yml

# Container and orchestration (2025 practices)
k8s-local/
helm-local/
docker-data/
*.pid

# Research and documentation working files
research/drafts/
research/tmp/
docs/generated/
*.draft.md

# Repomix outputs
repomix-output*.md
repomix-output*.xml
repomix-archive/

# Code smell analysis outputs
analysis/phase*/
analysis/reports/*.json
analysis/reports/*.html
analysis/ci/
analysis/baseline/

# Claude runtime files
.claude/context/
.claude/planning/master-plan.md
.claude/planning/execute-plan.sh